{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageArr","Math","ceil","className","href","onClick","map","pageNum","length","items","App","useState","numItemsPerPage","setNumItemsPerPage","setCurrentPage","slice","itemsPerPage","setItemsPerPage","id","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"gMAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAIIC,EAAUX,EAAW,EADRY,KAAKC,KAAKN,EAAQC,IAGrC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UACEL,IAAgBE,EAAQ,GACpB,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRG,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAAQ,GACvCK,QAAS,kBAAMN,EAAaD,EAAc,IAL5C,oBAWDE,EAAQM,KAAI,SAAAC,GAAO,OAClB,oBACEJ,UACEL,IAAgBS,EACZ,mBACA,YAJR,SAQE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAaQ,IAJ9B,SAMGA,KAREA,MAaT,oBACEJ,UACEL,IAAgBE,EAAQA,EAAQQ,OAAS,GACrC,qBACA,YAJR,SAOE,mBACE,UAAQ,WACRL,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAAQA,EAAQQ,OAAS,GACxDH,QAAS,kBAAMN,EAAaD,EAAc,IAL5C,wBC5DFW,EADapB,EAAW,EADf,IAGZiB,KAAI,SAAAb,GAAC,qBAAYA,MAEPiB,EAAgB,WAC3B,MAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOb,EAAP,KAAoBgB,EAApB,KACA,EAAwCH,mBACtC,YAAIF,GAAOM,MAAMjB,EAAcc,EAAkBA,EAC/Cd,EAAcc,IAFlB,mBAAOI,EAAP,KAAqBC,EAArB,KAsBA,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCA,EAAcc,EAAkBA,EAAkB,EADnF,cAC0Fd,EAAcc,EADxG,eAlCS,GAkCT,OAIA,sBAAKT,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAOP,EACPQ,SAhCV,SAAsBC,GACpBR,GAAoBQ,EAAMC,OAAOH,OACjCL,EAAe,GACfG,EACE,YAAIR,GAAOM,MAAM,GACdM,EAAMC,OAAOH,SAsBZ,UAOE,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MA5DO,GA6DPC,QAASe,EACTd,YAAaA,EACbC,aAzCe,SAACyB,GACpBV,EAAeU,GACfP,EACE,YAAIR,GAAOM,MAAMS,EAAOZ,EAAkBA,EACxCY,EAAOZ,OAuCT,6BACGI,EAAaV,KAAI,SAAAmB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCrElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91538337.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ntype Props = {\n  total:number,\n  perPage:number,\n  currentPage:number,\n  onPageChange:(page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const numOfPages = Math.ceil(total / perPage);\n  const pageArr = getNumbers(1, numOfPages);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={\n          currentPage === pageArr[0]\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === pageArr[0]}\n          onClick={() => onPageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n\n      {pageArr.map(pageNum => (\n        <li\n          className={\n            currentPage === pageNum\n              ? 'page-item active'\n              : 'page-item'\n          }\n          key={pageNum}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNum}`}\n            onClick={() => onPageChange(pageNum)}\n          >\n            {pageNum}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={\n          currentPage === pageArr[pageArr.length - 1]\n            ? 'page-item disabled'\n            : 'page-item'\n        }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageArr[pageArr.length - 1]}\n          onClick={() => onPageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst maxNum = 42;\nconst numbersArr = getNumbers(1, maxNum);\nconst items = numbersArr\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [numItemsPerPage, setNumItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(\n    [...items].slice(currentPage * numItemsPerPage - numItemsPerPage,\n      currentPage * numItemsPerPage),\n  );\n\n  function handleChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setNumItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n    setItemsPerPage(\n      [...items].slice(0,\n        +event.target.value),\n    );\n  }\n\n  const onPageChange = (page:number) => {\n    setCurrentPage(page);\n    setItemsPerPage(\n      [...items].slice(page * numItemsPerPage - numItemsPerPage,\n        page * numItemsPerPage),\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${currentPage * numItemsPerPage - numItemsPerPage + 1} - ${currentPage * numItemsPerPage} of ${maxNum})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={numItemsPerPage}\n            onChange={handleChange}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={maxNum}\n        perPage={numItemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {itemsPerPage.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}